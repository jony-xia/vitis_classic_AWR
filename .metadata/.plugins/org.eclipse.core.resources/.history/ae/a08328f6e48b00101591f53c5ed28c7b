/******************************************************************************
* Copyright (C) 2023 Advanced Micro Devices, Inc. All Rights Reserved.
* SPDX-License-Identifier: MIT
******************************************************************************/
/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"
#include "./ti/control/mmwavelink/mmwavelink.h"
#include "host.h"

rlClientCbs_t clientCtx = {0};
rlReturnVal_t retVal;
rlUInt32_t deviceMap = RL_DEVICE_MAP_CASCADED_2;    //双片级联

int main()
{
    init_platform();

    //初始化GPIO相关配置
    Host_GPIO_Init();

    print("Hello World\n\r");
    print("Successfully ran application\n\r");


    clientCtx.comIfCb.rlComIfOpen = Host_spiOpen;
    clientCtx.comIfCb.rlComIfClose = Host_spiClose;
    clientCtx.comIfCb.rlComIfRead = Host_spiRead;
    clientCtx.comIfCb.rlComIfWrite = Host_spiWrite;

    clientCtx.devCtrlCb.rlDeviceDisable = Host_disableDevice;
    clientCtx.devCtrlCb.rlDeviceEnable  = Host_enableDevice;
//    clientCtx.devCtrlCb.rlDeviceMaskHostIrq   = Host_spiIRQMask;
//    clientCtx.devCtrlCb.rlDeviceUnMaskHostIrq = Host_spiIRQUnMask;
//    clientCtx.devCtrlCb.rlRegisterInterruptHandler = Host_registerInterruptHandler;
//    clientCtx.devCtrlCb.rlDeviceWaitIrqStatus = Host_deviceWaitIrqStatus;

    clientCtx.eventCb.rlAsyncEvent = Host_asyncEventHandler;

    clientCtx.timerCb.rlDelay = Host_osiSleep;

     clientCtx.crcCb.rlComputeCRC = Host_computeCRC;
     clientCtx.crcType = RL_CRC_TYPE_32BIT;

    while(1)
	{
    	print("Hello World\n\r");
    	sleep(1);
	}
    cleanup_platform();
    return 0;
}


