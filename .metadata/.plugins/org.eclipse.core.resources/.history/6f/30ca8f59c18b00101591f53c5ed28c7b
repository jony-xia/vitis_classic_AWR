<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
<title>rlPhShiftCalibrationStore_t Struct Reference</title>
<link href="doxygen.css" rel="stylesheet" type="text/css">
<link href="tabs.css" rel="stylesheet" type="text/css">
</head><body>
<table width=100%>
<tr>
  <td bgcolor="black" width="1"><a href="http://www.ti.com"><img border=0 src="../../tilogo.gif"></a></td>
  <td bgcolor="red"><img src="../../titagline.gif"></td>
</tr>
</table>
<!-- Generated by Doxygen 1.9.5 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-attribs">Data Fields</a>  </div>
  <div class="headertitle"><div class="title">rlPhShiftCalibrationStore_t Struct Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Phase shift calibration data which application will receive from radarSS and will feed in to the Device in next power up to avoid calibration.  
 <a href="structrl_ph_shift_calibration_store__t.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="rl__sensor_8h_source.html">control/mmwavelink/include/rl_sensor.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Data Fields</h2></td></tr>
<tr class="memitem:af38e781a3e47850877e404e8aaeb6738"><td class="memItemLeft" align="right" valign="top"><a id="af38e781a3e47850877e404e8aaeb6738" name="af38e781a3e47850877e404e8aaeb6738"></a>
rlUInt8_t&#160;</td><td class="memItemRight" valign="bottom"><b>txIndex</b></td></tr>
<tr class="memdesc:af38e781a3e47850877e404e8aaeb6738"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index of the transmitter channel for which the phase shift is desired <br  />
 Valid range: 0 to (Number of Tx channels enabled at rlSetChannelConfig) - 1 <br  />
 e.g: 0 to 1 (For xWR1642), 0 to 2 (For xWR1843, xWR1443, xWR1243, xWR2243 &amp; <br  />
 xWR6243). <br  />
. <br /></td></tr>
<tr class="separator:af38e781a3e47850877e404e8aaeb6738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1954c7dbb803007ae4f1290079aed71"><td class="memItemLeft" align="right" valign="top"><a id="ac1954c7dbb803007ae4f1290079aed71" name="ac1954c7dbb803007ae4f1290079aed71"></a>
rlUInt8_t&#160;</td><td class="memItemRight" valign="bottom"><b>calibApply</b></td></tr>
<tr class="memdesc:ac1954c7dbb803007ae4f1290079aed71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set this to 1 after injecting calibration data for all Txs to enable the firmware <br  />
 calibration. <br  />
. <br /></td></tr>
<tr class="separator:ac1954c7dbb803007ae4f1290079aed71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae78d34bc0bc3b34afe84d25ec629e3ca"><td class="memItemLeft" align="right" valign="top"><a id="ae78d34bc0bc3b34afe84d25ec629e3ca" name="ae78d34bc0bc3b34afe84d25ec629e3ca"></a>
rlUInt8_t&#160;</td><td class="memItemRight" valign="bottom"><b>observedPhShiftData</b> [128U]</td></tr>
<tr class="memdesc:ae78d34bc0bc3b34afe84d25ec629e3ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Observed phase shift corresponding to each desired phase shift. Index n <br  />
 corresponds to desired phase shift of n * 5.625 degree. <br  />
 For TX0, for phase shifter setting/index n=0 to 63 corresponding to functional APIs (e.g. Profile Config, Per Chirp Phase Shifter, etc), the calibration data needs to be retrieved from/restored to following byte locations of TX0 phase calibration data save/restore API: <br  />
 n Desired phase shift Observed phase shift is injected in the following bytes <br  />
 17 17*5.625 degrees byte[1], byte[0] <br  />
 18 18*5.625 degrees byte[3], byte[2] <br  />
 : : : <br  />
 : : : <br  />
 62 62*5.625 degrees byte[91], byte[90] <br  />
 63 63*5.625 degrees byte[93], byte[92] <br  />
 0 0*5.625 degrees byte[95], byte[94] <br  />
 1 1*5.625 degrees byte[97], byte[96] <br  />
 : : : <br  />
 : : : <br  />
 15 15*5.625 degrees byte[125], byte[124] <br  />
 16 16*5.625 degrees byte[127], byte[126] <br  />
 For TX1 and TX2, for phase shifter setting/index n=0 to 63 corresponding to functional APIs (e.g. Profile Config, Per Chirp Phase Shifter, etc), the calibration data needs to be retrieved from/restored to following byte locations of TX1 and TX2 phase calibration data save/restore API: <br  />
 n Desired phase shift Observed phase shift is injected in the following bytes <br  />
 49 49*5.625 degrees byte[1], byte[0] <br  />
 50 50*5.625 degrees byte[3], byte[2] <br  />
 : : : <br  />
 : : : <br  />
 62 62*5.625 degrees byte[27], byte[26] <br  />
 63 63*5.625 degrees byte[29], byte[28] <br  />
 0 0*5.625 degrees byte[31], byte[30] <br  />
 1 1*5.625 degrees byte[33], byte[32] <br  />
 : : : <br  />
 : : : <br  />
 47 47*5.625 degrees byte[125], byte[124] <br  />
 48 48*5.625 degrees byte[127], byte[126] <br  />
 1 LSB = (360 degree)/pow(2,10). <br  />
. <br /></td></tr>
<tr class="separator:ae78d34bc0bc3b34afe84d25ec629e3ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cff1a41350352c24f35ea0ea633ef3f"><td class="memItemLeft" align="right" valign="top"><a id="a9cff1a41350352c24f35ea0ea633ef3f" name="a9cff1a41350352c24f35ea0ea633ef3f"></a>
rlUInt16_t&#160;</td><td class="memItemRight" valign="bottom"><b>reserved</b></td></tr>
<tr class="memdesc:a9cff1a41350352c24f35ea0ea633ef3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reserved for future use. <br /></td></tr>
<tr class="separator:a9cff1a41350352c24f35ea0ea633ef3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p >Phase shift calibration data which application will receive from radarSS and will feed in to the Device in next power up to avoid calibration. </p>

<p class="definition">Definition at line <a class="el" href="rl__sensor_8h_source.html#l04709">4709</a> of file <a class="el" href="rl__sensor_8h_source.html">rl_sensor.h</a>.</p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>control/mmwavelink/include/<a class="el" href="rl__sensor_8h_source.html">rl_sensor.h</a></li>
</ul>
</div><!-- contents -->
<hr size="1"><small>
Copyright  2025, Texas Instruments Incorporated</small>
</body>
</html>
